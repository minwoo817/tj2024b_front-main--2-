/*
    반복문
        - 조건 충족할 때 특정 범위내 코드를 반복 실행
        - 형태 
            for(초기값; 조건문; 증감식){
                실행문;
            }
            1. 초기값 : 반복을 할때 반복의 카운터/횟수 체크하는 변수의 처음값 예] i = 1;
            2. 조건문 : 반복실행문이 실행되는 조건으로 true이면 { 실행문 } 실행, 아니면 for 종료 예] i < 1000;
            3. 증감식 : 반복변수의 증가 혹은 감소 변화 연산식 예] i++
            4. 실행문 : 조건문이 true 일때 실행할 코드
        - 컴퓨터가 읽어드리는 흐름 순서
            1. 초기값 -> 2. 조건문(true) -> 3. 실행문 -> 4. 증감식 -> 5. 조건문(true) -> 6. 실행문 
                                                        4. 증감식 -> 5. 조건문(true) -> 6. 실행문 
                                                        4. 증감식 -> 5. 조건문(false) -> 6. 실행문 종료
        - 누가 어디서부터 어디까지 증감하면서 반복하는 주체
        예] 유재석이 계단 한 칸부터 열 칸까지 한 칸씩 오른다를 반복
        for(let i = 1; i <= 10 i++){
            오른다
        }
            

*/
// [1] '안녕하세요' 5번 출력하세요. 
console.log('안녕하세요')
console.log('안녕하세요')
console.log('안녕하세요')
console.log('안녕하세요')
console.log('안녕하세요')
// [2] 1부터 5까지 출력하세요.
console.log( 1 )
console.log( 2 )
console.log( 3 )
console.log( 4 )
console.log( 5 )
// [3] 반복(중복)되는 코드와 반복되지 않는 코드
// 중복되는 코드 : console.log()
// 중복되지 않는 코드 : 1 2 3 4 5 // 중복되지 않는 코드 패턴 : 1부터 5까지 1씩 증가
// 1. 초기값 : 반복변수 = 1; 2. 조건문 : 반복변수 <= 5; 3. 증감식 : 반복변수++; 4. 실행문(반복코드): console.log()
for (let i = 1; i <= 5; i++) {
    console.log(i);
}
// [5] 1부터 10까지 누적 합계를 계산하시오
// [반복문 없이]
/*
let total = 0;          //총합계라는 변수에 0 대입
total = total + 1;      //총합계 변수를 호출해서 +1 한 결과를 총합계에 대입, 총합계 1
total = total + 2;      //총합계 = 총합계 + 값; vs 총합계 += 값;
total = total + 3;
total = total + 4;
total = total + 5;
total = total + 6;
total = total + 7;
total = total + 8;
total = total + 9;
total = total + 10;
*/
// 반복되는 코드 : 총합계 = 총합계 +
// 반복되지 않는 코드 : let 총합계 = 0; 1 2 3 4 5 6 7 8 9 10
// 반복되지 않는 코드 순서/패턴 : 1부터 10까지 1씩 증가
// [반복문 코드]
let sum = 0;
for (let i = 1; i <= 10; i++) {     // 숫자 패턴은 1부터 10이하까지 숫자패턴은 1씩 증가 반복
    sum = sum + i;
}
console.log(sum)
// [6] 2단의 구구단을 출력하시오
let i;
let multi = 0;
for(i = 1; i <= 9; i++) {
    multi = i * 2
    console.log(`구구단 : 2 * ${i} = ${multi}`)
}
