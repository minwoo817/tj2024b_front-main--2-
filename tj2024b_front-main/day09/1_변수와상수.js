/* 
    JS 리터럴 데이터
        Number : 10, 3.14, 
        String : "유재석", '강호동', 
        Boolean : true, false
        undefined : 값 X 
    
    변수 : 하나의 자료/데이터 저장하는 메모리 공간
    1. let : 변수를 선언하기 위한 키워드
    2. 변수명 : 메모리 공간의 상징적인 이름
    3. = : 대입연산자
    4. 데이터 : 변수에 저장할 데이터
    
    상수 : 하나의 자료/데이터 저장하는 메모리 공간(선언 이후에 수정 X)
    1. const : 상수를 선언하기 위한 키워드
    2. 상수명 : 메모리 공간의 상징적인 이름
    3. = : 대입연산자
    4. 데이터 : 상수에 저장할 데이터
*/
let name = "유재석"     // 1. 변수 선언
name                    // 2. 변수가 갖는 (데이터) 반환
name = "강호동"         //3. 변수의 데이터 변경
let name2 = name + 10; // 4. 변수가 갖는 데이터와 다른 데이터와 연산/계산 가능

const age = 40;         //1. 상수 선언
age                     //2. 상수가 갖는 (데이터) 반환
age = 100               //3. 상수의 데이터 변경, 코드에서는 문제 X, 실행 결과 오류 발생
// 27줄 오류 : Assignment to constant variable : 상수가 갖는 데이터 변경할 수 없다
let age2 = age + 20;    //4. 상수가 갖는 데이터와 다른 데이터와 연산 가능

// 생각 (아래 코드에서 변수의 개수와 리터럴 개수를 파악)
let point1 = 50              //변수는 point1, 리터럴/값/데이터 : 50
let point2 = 100             //변수는 point2, 리터럴/값/데이터 : 100
let point3 = point1 + point2 //변수는 point3, 리터럴/값/데이터 : 150
    // 동시에 2개 이상 연산 불가능
    //let point3 = point1 + point2
    //1. 대입연산자 기준 오른쪽 코드 우선
    //2. 변수 값 호출, 50, 100
    //3. + 연산자, 50 + 100 = 150(리터럴)
    //4. + 연산 결과를 왼쪽 항에 대입, let point3 = 150
//변수 3개, 데이터/리터럴 : 3개

//생각2 함수/연산 이란? 하나의 결과를 내는 작업

// 생각3 변수명 존재 이유 : 중복값 배제()
